\documentclass[12pt,oneside,openany]{book}
\usepackage[utf8]{inputenc}
\usepackage[a4paper,%%textwidth=129mm,textheight=185mm, %%193-8
text={160mm,260mm},centering]{geometry}
\usepackage[BoldFont,SlantFont,CJKsetspaces,CJKchecksingle,CJKnumber,CJKaddspaces]{xeCJK}
\usepackage{graphicx, color}
\usepackage{setspace}
\setCJKmainfont[BoldFont=SimHei]{SimSun}% 设置缺省中文字体
\setCJKmonofont{SimSun}
\usepackage{amsmath}%数学符号与公式
\usepackage[pdftex,dvipdfm]{hyperref}
\usepackage{amsfonts}%数学符号与字体
\renewcommand{\contentsname}{目录}
\pagestyle{plain}
\begin{document}
\SweaveOpts{concordance=TRUE}
<<setup, include=FALSE>>=
opts_chunk$set(message=FALSE, tidy=FALSE, fig.align="center", fig.width=5, fig.height=3,  digits=3, highlight=TRUE, warning=FALSE)
options(scipen=4)
par(mar=c(2,2,2,1))
@
\title{多元作业}
\author{吴敏}
\maketitle
\tableofcontents
\chapter*{第二章}
\addcontentsline{toc}{chapter}{第二章}
\section*{第一题}
\addcontentsline{toc}{section}{第一题}
<<2.1>>=
#输入数据
R <- matrix(c(1,0.8,0.26,0.67,0.34,0.8,1,0.33,0.59,0.34,0.26,0.33,
              1,0.37,0.21,0.67,0.59,0.37,1,0.35,0.34,0.34,0.21,0.35,1), 5, 5)
#求逆矩阵
solve(R)
#求特征值和特征向量
R.eigen <- eigen(R)
R.eigen$values
R.eigen$vectors
#计算函数
REigen <- function(R) {
  R.eigen <- eigen(R)
  a <- list(
    solve(R),
    R.eigen$values,
    R.eigen$vectors)
 names(a) <- c("逆矩阵","特征值","特征向量")
  a
}
REigen(R)
@
\section*{第二题}
\addcontentsline{toc}{section}{第二题}
<<2.2>>=
#数据读入
data2.2 <- read.csv("~/homework/data/data2.2.csv", header=T)
names(data2.2) <- c("income")

#频数表函数

DataTable <- function(data, n) {
index <- (max(data)-min(data))/n#求组数
index <- ceiling(index) 
factor.data <- factor(cut(data, breaks=min(data)-1+n*(0:index)))#对数据分组
table.data <- table(factor.data) #频数表
table.data
} 
#累积频率函数
 SumFreq <-function(f) {
  m <- c(1:length(f))
  m[1] <- f[1]  
  for(i in 2:length(f)) {
   m[i] <- f[i] + m[i-1]
  }
  return(m/sum(f))
}
#总体程序, 输入的data为向量，n为组距
FreqSummary <- function(data, n) {
 table.data <- DataTable(data, n)  #得到频数表
 data.freq <- table.data/length(data) #计算频率
 barplot(table.data, col=1:7)
 freq.matrix <- rbind(table.data, data.freq, SumFreq(table.data))
 row.names(freq.matrix) <- c("频数", "频率", "累计频率")
 freq.matrix       
}
#输出结果
FreqSummary(data2.2$income, 300)
#基本统计分析
summary(data2.2)
#正态概率图
hist(data2.2$income, breaks=20, prob=T, col=4)
lines(density(rnorm(200000, mean(data2.2$income), sd(data2.2$income))), lwd=2)
@
从图可知，低收入人群更多。收入的概率密度曲线右偏

\section*{第三题}
\addcontentsline{toc}{section}{第三题}
<<2.3>>=
#数据读入
data2.3 <- read.csv("~/homework/data/data2.3.csv", header=T)

#基本统计分析
summary(data2.3)
table(data2.3[, 2], data2.3[, 4])
@
\section*{第四题}
\addcontentsline{toc}{section}{第四题}
第二题的FreqSummary函数具有此功能。参数data接受向量输入数据， 参数n为希望得到的组距能得到频数、频率、累计频率组成的表，以及直方图。
\chapter*{第三章}
\addcontentsline{toc}{chapter}{第三章}
\section*{第一题}
\addcontentsline{toc}{section}{第一题}
星象图与雷达图的区别。星象图用扇形大小表示数据的大小，而雷达图用点到原点的距离表示；雷达图在一个图形中表示不同对象，用线的颜色或类型区别。而星象图在不同图形中表示。函数太难就不编了，拿别人编好的来用就行。下题将使用星象图与雷达图作图。
\section*{第二题}
\addcontentsline{toc}{section}{第二题}
<<3.2, fig.width=6, fig.height=5>>=
pdf.options(family="GB1")
#数据读入
data3.2 <- read.csv("~/homework/data/data3.2.csv", header=T)
row.names(data3.2) <- data3.2[,1]
data3.2 <- data3.2[,2:5]
names(data3.2) <- c("工业总产值","工业增加值","产品销售收入","产品出口销售收入")
#各变量均值的条形图和饼图
barplot(apply(data3.2, 2, mean), ylim=c(0,500), col=2:4, main="各指标均值")
pie(apply(data3.2, 2, mean), col=rainbow(4))
#箱形图
boxplot(data3.2, main="各指标数据的分布情况")
#星象图
stars(data3.2, draw.segments=T)
#雷达图
library(fmsb)
radarchart(data3.2)
par(mar=c(1,2,1,1),mfrow=c(2,2))
barplot(data3.2[, 1], main="工业产值在各地区的情况")
barplot(data3.2[, 2], main="工业增加值在各地区的情况")
barplot(data3.2[, 3], main="产品销售收入在地区的情况")
barplot(data3.2[, 4], main="产品出口销售收入在各地区的情况")
par(mar=c(2,2,2,1), mfrow=c(1,1))
@


\chapter*{第四章}
\addcontentsline{toc}{chapter}{第四章}
\section*{第一题}
\addcontentsline{toc}{section}{第一题}
<<>>=
#数据读入
x1 <- c(10,5,7,19,11,8)
y <- c(15,9,3,25,7,13)
#建立回归方程
model1 <- lm(y ~ x1)
model1
#拟合的估计值
fitted(model1)
#残差
residuals(model1)
#残差平方和
sum(residuals(model1)^2)
@
\section*{第二题}
\addcontentsline{toc}{section}{第二题}
<<>>=
#读入x2
x2 <- c(2,3,3,6,7,9)
#先建立标准化函数
Standard <- function(x) {
unlist(lapply(x, function(p) (p-mean(x))/sd(x)))
}
data <- cbind(y, x1, x2)
#标准化数据
stdata <- apply(data, 2, function(p) Standard(p))
#建立标准化的回归方程
model2 <- lm(y ~ x1 + x2 + 0, data=as.data.frame(stdata))
#导出原回归方程
@
标准化的方程为\[(y_{i}-Ey)/Dy=(\beta_{1}x_{i1}-Ex_{i1})/Dx_{i1}+(\beta_{2}x_{i2}-Ex_{i1})/Dx_{i2}+\varepsilon_{i},i=1,2,...,6\]
根据该方程求出原变量的方程系数

<<coeff>>=
a0=mean(y)-coef(model2)[1]*sd(y)^2/sd(x1)^2-coef(model2)[2]*sd(y)^2/sd(x2)^2
a1=coef(model2)[1]*sd(y)^2/sd(x1)^2
a2=coef(model2)[2]*sd(y)^2/sd(x2)^2
@
原方程系数用$\alpha$表示则$\alpha_{0}=\Sexpr{unname(a0)}$，
$\alpha_{1}=\Sexpr{unname(a1)}$，
$\alpha_{2}=\Sexpr{unname(a2)}$。
原回归方程则为
\[
y_{i}=\Sexpr{unname(a0)}+\Sexpr{unname(a1)}x_{i1}+\Sexpr{unname(a2)}x_{i2}+\varepsilon_{i},i=1,2,...,6\]

\section*{第三题}
\addcontentsline{toc}{section}{第三题}
<<>>=
#输入数据
x <- c(825,215,1070,550,480,920,1350,325,670,1215)
y <- c(3.5,1,4,2,1,3,4.5,1.5,3,5)
data3 <- cbind(y,x)
data3 <- as.data.frame(data3)
#加载包，并作散点图
library(ggplot2)
p <- ggplot(data=data3, aes(x=x, y=y))
p + geom_point()
#计算x与y的相关系数
cor(x,y)
#估计线性回归方程
model3 <- lm(y ~ x)
model3
summary(model3)$sigma^2
@
所以随机误差项的方差估计值
\Sexpr{summary(model3)$sigma}
<<>>=
#求x与y的决定系数
sqrt(summary(model3)$r.squared)
#对回归方程作方差分析
anova(model3)
@
残差图如下
<<echo=FALSE>>=
data <- cbind(x, residuals(model3))
ggplot(data=as.data.frame(data), aes(x=x, y=residuals(model3))) + geom_point()+
  geom_hline(h=0)
@
根据散点图我们可以看出，残差基本上在0周围上下波动
计算$x_0=1000$时的加班时间
<<>>=
 predict(object=model3, data.frame(x=c(1000)))
@

\section*{第四题}
\addcontentsline{toc}{section}{第四题}
<<>>=
#读入数据
data4 <- read.csv("~/homework/data/data4.4.csv", header=T)
names(data4) <- c("budget", "agent", "sale")
model4 <- lm(sale ~ budget + agent, data=data4)
summary(model4)
@
根据估计的系数值看，广告预算每增加1千元，年销售额增加15万；每增加一个代理, 年销售额增加122万；常数项表示当预算和代理都为零时，年销售额为－2275万。但从t检验的值来看，系数并不显著。画散点分析下：
<<>>=
plot(data4$budget,data4$sale)
plot(data4$agent,data4$sale)
@
发现广告预算与销售额没有明显的线性


<<>>=
model <- lm(sale ~ budget, data=data4)
summary(model)
@
在5％显著水平下，销售额与广告预算线性关系不显著
<<>>=
model <- lm(sale ~ agent, data=data4)
summary(model)
@
在5％显著水平下，销售额与代理数线性关系不显著

<<>>=
#计算相关系数
cor(data4)
#计算复相关系数
sqrt(summary(lm(sale ~ budget + agent, data=data4))$r.squared)
@

\section*{第五题}
\addcontentsline{toc}{section}{第五题}
<<4.5>>=
#读入数据
data5 <- read.csv("~/homework/data/data4.5.csv", header=T)
names(data5) <- c("GPA", "age", "wage")
model5 <- lm(wage ~ GPA + age, data=data5)
summary(model5)
@
从系数来看GPA每增加1分，起始工资增加8509元；年龄每增加一岁，起始工资增加182元
从系数的t检验来看，GPA可以解释起始工资的变化。而年龄则不显著
预测GPA为3，年龄为24岁的毕业生起始工资
<<>>=
predict(model5, data.frame(GPA=c(3), age=c(24)))
@
\section*{第六题}
\addcontentsline{toc}{section}{第六题}
<<>>=
#读入数据
data6 <- read.csv("~/homework/data/data4.6.csv", header=T)
#相关系数矩阵与矩阵散点图
cor(data6)
pairs(data6)
#建立多元线性回归方程
model6 <- lm(y ~ x1 + x2 + x3, data=data6)
model6
#拟合优度检验
summary(model6)$r.squared
#方程拟合程度较高
summary(model6)
#可以看出x1和x3没有通过检验重建模型
model6 <- lm(y ~ x2, data=data6)
summary(model6)
#全局择优
library("leaps")
var.select <- regsubsets(y ~ x1 + x2 + x3, data=data6)
result <- summary(var.select)
data.frame(result$outmat, R2=result$rsq)
#最后选择x2
@
\section*{第七题}
\addcontentsline{toc}{section}{第七题}
<<>>=
#读入数据
data7 <- read.csv("~/homework/data/data4.7.csv", header=T)
#相关系数矩阵与矩阵散点图
cor(data7)
pairs(data7)
#建立多元线性回归方程
model7 <- lm(Y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7, data=data7)
summary(model7)
#X1和X2没有通过检验，剔除
model7 <- lm(Y ~ X3 + X4 + X5 + X6 + X7, data=data7)
summary(model7)
#用逐步回归建立回归模型
model7 <- lm(Y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7, data=data7)
step(model7, direction="both")
@
最后建立的模型剔除了X3
<<>>=
#用变量选择法建立模型
var.select <- regsubsets(Y ~ X1 + X2 + X3 + X4 + X5 + X6 + X7, data=data7)
result <- summary(var.select)
data.frame(result$outmat, R2=result$rsq, BIC=result$bic)
@
最后根据BIC选择的模型也是剔除X3
\section*{第八题}
\addcontentsline{toc}{section}{第八题}
离差矩阵函数
<<>>=
#先建立中心化每个变量值的函数
Center <- function(x) {
unlist(lapply(x, function(p) (p-mean(x))))
}
#求离差矩阵的函数
DispMatrix <- function(M) {
  m <- M
  m <-unname(m)
  for(i in 1:dim(m)[2]) {
    m[, i] <- Center(m[, i])
  }
   return(t(m)%*%m)
}
@
决定系数函数,本函数以一元为例
<<>>=
r.fun <- function(m) {
  x <- model.matrix(~ m[, 1],m)
  y <- m[, 2]
  coeff <- solve(t(x)%*%x)%*%t(x)%*%y
  y.hat <- x%*%coeff
  cor(y, y.hat)
}
@
\chapter*{第五章}
\addcontentsline{toc}{chapter}{第五章}
\section*{第一题}
\addcontentsline{toc}{section}{第一题}
<<5.1,fig.width=5, fig.height=4>>=
#输入数据
price <- c(275, 300, 325, 350, 375)
sale.rate <- c(1.6, 0.95, 0.65, 0.50, 0.45)
price.sale <- cbind(price, sale.rate)
plot(price, sale.rate, pch=3)
model5.1 <-lm(sale.rate ~ log(price))
summary(model5.1)
lines(price, predict(model5.1), pch=2)
model5.1.2 <- lm(sale.rate ~poly(price, 2))
summary(model5.1.2)
lines(price, predict(model5.1.2), pch=2, col=3)
#二次曲线能得到更好的拟合结果

#预测
predict(model5.1.2, data.frame(price=c(295)))
@
\section*{第二题}
\addcontentsline{toc}{section}{第二题}
<<5.2>>=
#输入数据
MPH <- c(32, 37, 44, 49, 56, 62, 68)
MPG <- c(20, 23, 26, 27, 26, 25, 22)
#先建模
model5.2 <- lm(MPG ~poly(MPH, 2))
summary(model5.2)
plot(MPH, MPG, pch=3)
lines(MPH, predict(model5.2), pch=2, col=4)
#预测
predict(model5.2, data.frame(MPH=c(50)))
@
\section*{第三题}
\addcontentsline{toc}{section}{第三题}
<<5.3>>=
#读入数据
data5.3 <- read.csv("~/homework/data/data5.3.csv", header=T)
plot(data5.3$X, data5.3$y, pch=3)
#建幂函数模型
model5.3 <- lm(log(data5.3$y) ~ log(data5.3$X))
summary(model5.3)
lines(data5.3$X, exp(fitted(model5.3)))
@
\section*{第四题}
\addcontentsline{toc}{section}{第四题}
<<5.4>>=
#读入数据
data5.4 <- read.csv("~/homework/data/data5.4.csv", header=T)
model5.4.1 <- lm(y ~ X1 + X2 + X3, data=data5.4)
summary(model5.4.1)
#X1、X2 、X3都不显著。建立对数线性模型
model5.4.2 <- lm(log(y) ~ log(X1) + log(X2) + log(X3/X2), data=data5.4)
summary(model5.4.2)
#从t检验和f检验来看，对数线性模型稍稍比线性模型优
#是否在1978年之后设为虚拟变量
X4 <-c(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
model5.4.3 <- lm(y ~ X1 + X2 + X3 + factor(X4), data=data5.4)
summary(model5.4.3)
@

\section*{第五题}
\addcontentsline{toc}{section}{第五题}
<<5.5>>=
#读入数据
data5.5 <- read.csv("~/homework/data/data5.5.csv", header=T)
names(data5.5) <- c( "X", "t", "PCEXP",  "EXPDUR", "EXPND", "EXPS"  )
#构造耐用消费品支出与个人消费支出的幂函数回归模型
model5.5.1 <- lm(log(EXPDUR) ~ log(PCEXP), data=data5.5)
summary(model5.5.1)
#构造服务性消费品支出与时间t的回归模型
model5.5.2 <- lm(log(data5.5$EXPS) ~ data5.5$t + 0 , data=data5.5)

summary(model5.5.2)
#求增长率r
r = exp(coef(model5.5.2)[1])-1
r
@

\section*{第六题}
\addcontentsline{toc}{section}{第六题}
<<5.6>>=
logistic.plot <- function(x) {
  y <- 1/(1 + exp(-x))
  
  plot(x, y, main="logistic函数", type="l", lty=2, col=4)
}
#函数的使用
logistic.plot(c(-10:10))
@

\chapter*{第六章}
\addcontentsline{toc}{chapter}{第六章}
\section*{第一题}
\addcontentsline{toc}{section}{第一题}



<<file>>=
Classifier <- function(file) {
#读入数据
data6.1 <- read.csv(paste("~/homework/data/", file, sep=""), header=T)

#作图分析
library(ggplot2)
p <- qplot(x1, x2, data = data6.1, colour = factor(G), size = I(4))

#建立logistic回归模型
model6.1.1 <- glm(factor(G) ~ x1 + x2, 
                  family = binomial(link = 'logit'),data=data6.1)
#查看判别结果
logistic判别结果 <-ifelse(fitted(model6.1.1)<0.5, 1, 2)
tab1=table(data6.1$G, logistic判别结果)
print(tab1)#logistic判别结果
rate.logistic <- mean(with(data6.1, logistic判别结果 == G))
print(p + geom_abline(intercept=(0.5-coef(model6.1.1)[1])/coef(model6.1.1)[3], 
                      slope=-coef(model6.1.1)[2]/coef(model6.1.1)[3]) + 
                        ggtitle("logistic判别函数图"))
#加载包
library(MASS)
#建立线性判别模型
model6.1.2 <- lda(G ~ x1 + x2, data=data6.1)
lda判别结果 <- predict(model6.1.2)$class
tab2=table(data6.1$G, lda判别结果)
print(tab2)
rate.lda <- mean(with(data6.1, lda判别结果 == G))
intercept=sum(model6.1.2$means%*%coef(model6.1.2))/(2*coef(model6.1.2)[2])

print(p + geom_abline(intercept=intercept, 
                      slope=-coef(model6.1.2)[1]/coef(model6.1.2)[2]) + 
                        ggtitle("线性判别函数图"))

#建立二次判别模型
model6.1.3 <- qda(G ~ x1 + x2, data=data6.1)
qda判别结果 <- predict(model6.1.3)$class
tab3=table(data6.1$G, qda判别结果)
print(tab3)
rate.qda <- mean(with(data6.1, qda判别结果 == G))

#建立bayes判别模型
#用样本的信息确定先验概率
prior <- prop.table(table(data6.1$G))
prior #先验概率
model6.1.4 <- lda(G ~ x1 + x2, prior=c(prior[1],prior[2]), data=data6.1)
bayes判别结果 <- predict(model6.1.4)$class
tab4=table(data6.1$G, bayes判别结果)
print(tab4)
rate.bayes <- mean(with(data6.1, bayes判别结果 == G))

#建立svm判别模型
#加载包
library(e1071)
model6.1.5 <- svm(G ~ x1 + x2, data=data6.1, kernel="linear")
svm判别结果 <-ifelse(fitted(model6.1.5)<1.5, 1, 2)
tab5=table(data6.1$G, svm判别结果)
print(tab5)
rate.svm <- mean(with(data6.1, svm判别结果 == G))

rate.result <- c(rate.logistic, rate.lda, rate.qda, rate.bayes, rate.svm)
names(rate.result) <- c("logistic", "lda", "qda", "bayes", "svm")
#结果比较
print("结果比较")
classifier.result <- list(logistic判别结果, lda判别结果, 
                          qda判别结果, bayes判别结果, svm判别结果)
print(rate.result)
list(model6.1.1, model6.1.2, model6.1.3, model6.1.4, 
     model6.1.5, classifier.result)
}
@

<<6.1>>=
#使用Classifier函数进行判别分析
model6.1 <- Classifier("data6.1.csv")
#上图直线为logistic回归得到的判别线
#由于二次判别的准确率最高，选择该模型进行预测
predict(model6.1[[3]], data.frame(x1=131, x2=-2))$class
#根据预测结果不应该贷款给该客户
@


\section*{第二题}
\addcontentsline{toc}{section}{第二题}
<<6.2>>=
#使用Classifier函数进行判别分析
model6.2 <- Classifier("data6.2.csv")
#通过结果可知qda与svm最恰当
@

\section*{第三题}
\addcontentsline{toc}{section}{第三题}
<<6.3>>=
#读入数据
data6.3 <- read.csv("~/homework/data/data6.3.csv", header=T)
#加载包
library(MASS)
#建立bayes判别模型
#用样本的信息确定先验概率
prior <- prop.table(table(data6.3$G))
prior #先验概率
model6.3 <- lda(G ~ x1 + x2, prior=c(prior[1],prior[2],prior[3]),
                data=data6.3)
bayes判别结果 <- predict(model6.3)$class
tab=table(data6.3$G, bayes判别结果)
print(tab)
rate.bayes <- mean(with(data6.3, bayes判别结果 == G))
rate.bayes
#预测GPA=3.21、 GMAT=497时，申请者归于哪类
predict(model6.3, data.frame(x1=3.21, x2=497))$class
#归于录取一类
@


\section*{第四题}
\addcontentsline{toc}{section}{第四题}

<<6.4,echo=FALSE>>=
#读入数据
data6.1 <- read.csv("~/homework/data/data6.4.csv", header=T)

#建立logistic回归模型
model6.1.1 <- glm(factor(G) ~ x1 + x2 + x3 + x4, 
                  family = binomial(link = 'logit'),data=data6.1)
#查看判别结果
logistic判别结果 <-ifelse(fitted(model6.1.1)<0.5, 1, 2)
tab1=table(data6.1$G, logistic判别结果)
print(tab1)#logistic判别结果
rate.logistic <- mean(with(data6.1, logistic判别结果 == G))

#加载包
library(MASS)
#建立线性判别模型
model6.1.2 <- lda(G ~ x1 + x2 + x3 + x4, data=data6.1)
lda判别结果 <- predict(model6.1.2)$class
tab2=table(data6.1$G, lda判别结果)
print(tab2)
rate.lda <- mean(with(data6.1, lda判别结果 == G))


#建立二次判别模型
model6.1.3 <- qda(G ~ x1 + x2 + x3 + x4 , data=data6.1)
qda判别结果 <- predict(model6.1.3)$class
tab3=table(data6.1$G, qda判别结果)
print(tab3)
rate.qda <- mean(with(data6.1, qda判别结果 == G))

#建立bayes判别模型
#用样本的信息确定先验概率
prior <- prop.table(table(data6.1$G))
prior #先验概率
model6.1.4 <- lda(G ~ x1 + x2 + x3 + x4, prior=c(prior[1],prior[2]),
                  data=data6.1)
bayes判别结果 <- predict(model6.1.4)$class
tab4=table(data6.1$G, bayes判别结果)
print(tab4)
rate.bayes <- mean(with(data6.1, bayes判别结果 == G))

#建立svm判别模型
#加载包
library(e1071)
model6.1.5 <- svm(G ~ x1 + x2 + x3 + x4, data=data6.1, kernel="linear")
svm判别结果 <-ifelse(fitted(model6.1.5)<1.5, 1, 2)
tab5=table(data6.1$G, svm判别结果)
print(tab5)
rate.svm <- mean(with(data6.1, svm判别结果 == G))

rate.result <- c(rate.logistic, rate.lda, rate.qda, rate.bayes, rate.svm)
names(rate.result) <- c("logistic", "lda", "qda", "bayes", "svm")
#结果比较
print("结果比较")
classifier.result <- list(logistic判别结果, lda判别结果, qda判别结果,
                          bayes判别结果, svm判别结果)
print(rate.result)
@
从结果可知二次判别正确率最高。运用该模型预测

<<>>=
predict(model6.1.2, data.frame(x1=78.356, x2=0.8895, x3=1.8, x4=14.1))$class
@
当x1=78.356, x2=0.8895, x3=1.8, x4=14.1时，该公司非ST公司


\section*{第五题}
\addcontentsline{toc}{section}{第五题}
<<6.5>>=
#iris的数据R自带，所以直接加载
data(iris)
#来个线性判别
#加载包
library(MASS)
#建立线性判别模型
model6.5 <- lda(Species ~ Sepal.Length + Sepal.Width + Petal.Width +
  Petal.Length, data=iris)
lda判别结果 <- predict(model6.5)$class
tab=table(iris$Species, lda判别结果)
print(tab)
rate.lda <- mean(with(iris, lda判别结果 == Species))
rate.lda
@


\section*{第六题}
\addcontentsline{toc}{section}{第六题}
<<6.6>>=
#两正态总体距离判别函数
DistantCrim <- function(G1, G2, new) { #G1, G2, new皆为矩阵
  D1 <- (new-apply(G1, 2, mean))%*%solve(cor(G1))%*%(new-apply(G1, 2, mean))
  D2 <- (new-apply(G2, 2, mean))%*%solve(cor(G2))%*%(new-apply(G2, 2, mean))
  if(D1 > D2) class <- 2
   else class <- 1
class
}
@





\enddocument